1. Containerization can be defined as packaging together of software code with necessary libraries,Frameworks and all its dependencies 
so that it can run uniformly and consistently on any infrastructure and they are isolated in their own container.

2. Docker Images is a executable packages(bundled with application code & dependencies, software packages, etc.) for the purpose of creating containers.

3. A hypervisor is a software that makes virtualization happen because of which is sometimes referred to as the Virtual Machine Monitor.
This divides the resources of the host system and allocates them to each guest environment installed.

4. A Docker image registry is an area where the docker images are stored. 
Instead of converting the applications to containers each and every time, a developer can directly use the images stored in the registry.

5. This image registry can either be public or private and Docker hub is the most popular and famous public registry available.

6. Dockerhub:  Public cloud-based registry provided by Docker for storing public images of the containers along with the provision of finding and sharing them.

7. Docker-compose is a YAML file consisting of all the details regarding various services, networks, and volumes that are needed for setting 
up the Docker-based application. It used for creating multiple containers, host them and establish communication between them.

8. Both the commands have similar functionality, but COPY is more preferred because of its higher transparency level than that of ADD.
COPY provides just the basic support of copying local files into the container whereas ADD provides additional features like remote URL and tar extraction support.

9. Dockerfile : Dockerfile is a text file that has all commands which needs to be run for building a given image.

----------> FROM: This is used to set the base image for upcoming instructions. 
                  A docker file is considered to be valid if it starts with the FROM instruction.
----------> LABEL: This is used for the image organization based on projects, modules, or licensing. 
                   It also helps in automation as we specify a key-value pair while defining a label that can be later accessed and handled programmatically.
----------> RUN: This command is used to execute instructions following it on the top of the current image in a new layer. 
                 Note that with each RUN command execution, we add layers on top of the image and then use that in subsequent steps.
----------> CMD: This command is used to provide default values of an executing container. 
                 In cases of multiple CMD commands the last instruction would be considered.

Commands:
1. In order to get the status of all the containers, we run the command:                          docker ps -a
2. Pushing Images to Docker Hub we run the command :                                              docker push
3. To get all version information of the client and server we run the command :                   docker version.
4. To get only the server version details, we run the command :                                   docker version --format '{{.Server.Version}}'
5. Running to export a docker image as an archive , we run the command :                          docker save -o <exported_name>.tar <container-name>
6. Running to import a pre-exported Docker image into another Docker host , we run the command :  docker load -i <export_image_name>.tar
